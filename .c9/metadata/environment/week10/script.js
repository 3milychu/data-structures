{"changed":true,"filter":false,"title":"script.js","tooltip":"/week10/script.js","value":"var express = require('express'), // npm install express\n    app = express();\nconst { Pool } = require('pg');\nvar AWS = require('aws-sdk');\n\n// AWS RDS credentials\nvar db_credentials = new Object();\ndb_credentials.user = 'chue134';\ndb_credentials.host = process.env.AWSRDS_EP;\ndb_credentials.database = 'aadb';\ndb_credentials.password = process.env.AWSRDS_PW;\ndb_credentials.port = 5432;\n\n// AWS DynamoDB credentials\nAWS.config = new AWS.Config();\nAWS.config.accessKeyId = process.env.AWS_ID;\nAWS.config.secretAccessKey = process.env.AWS_KEY;\nAWS.config.region = \"us-east-1\";\n\napp.get('/aameetings', function(req, res) {\n    \n    // Connect to the AWS RDS Postgres database\n    const client = new Pool(db_credentials);\n    \n    // SQL query \n    var thisQuery = `SELECT mtgaddress, mtglocation as location, json_agg(json_build_object('day', mtgday, 'time', mtgtime)) as meetings\n                 FROM aadata \n                 WHERE mtgday = 'Tuesday' and mtghour >= 19 \n                 GROUP BY mtgaddress, mtglocation\n                 ;`;\n\n    client.query(thisQuery, (qerr, qres) => {\n        if (qerr) { throw qerr }\n        else {\n            res.send(qres.rows);\n            client.end();\n            console.log('2) responded to request for aa meeting data');\n        }\n    });\n});\n\n// serve static files in /public\napp.use(express.static('public'));\n\n// listen on port 8080\napp.listen(8080, function() {\n    console.log('Server listening...');\n});","undoManager":{"mark":2,"position":7,"stack":[[{"start":{"row":0,"column":0},"end":{"row":18,"column":0},"action":"insert","lines":["var express = require('express'), // npm install express","    app = express();","const { Pool } = require('pg');","var AWS = require('aws-sdk');","","// AWS RDS credentials","var db_credentials = new Object();","db_credentials.user = 'aaron';","db_credentials.host = process.env.AWSRDS_EP;","db_credentials.database = 'mydb';","db_credentials.password = process.env.AWSRDS_PW;","db_credentials.port = 5432;","","// AWS DynamoDB credentials","AWS.config = new AWS.Config();","AWS.config.accessKeyId = process.env.AWS_ID;","AWS.config.secretAccessKey = process.env.AWS_KEY;","AWS.config.region = \"us-east-1\";",""],"id":1}],[{"start":{"row":9,"column":27},"end":{"row":9,"column":31},"action":"remove","lines":["mydb"],"id":2},{"start":{"row":9,"column":27},"end":{"row":9,"column":28},"action":"insert","lines":["a"]},{"start":{"row":9,"column":28},"end":{"row":9,"column":29},"action":"insert","lines":["a"]},{"start":{"row":9,"column":29},"end":{"row":9,"column":30},"action":"insert","lines":["d"]},{"start":{"row":9,"column":30},"end":{"row":9,"column":31},"action":"insert","lines":["b"]}],[{"start":{"row":7,"column":23},"end":{"row":7,"column":28},"action":"remove","lines":["aaron"],"id":3},{"start":{"row":7,"column":23},"end":{"row":7,"column":24},"action":"insert","lines":["c"]},{"start":{"row":7,"column":24},"end":{"row":7,"column":25},"action":"insert","lines":["h"]},{"start":{"row":7,"column":25},"end":{"row":7,"column":26},"action":"insert","lines":["u"]},{"start":{"row":7,"column":26},"end":{"row":7,"column":27},"action":"insert","lines":["e"]},{"start":{"row":7,"column":27},"end":{"row":7,"column":28},"action":"insert","lines":["1"]},{"start":{"row":7,"column":28},"end":{"row":7,"column":29},"action":"insert","lines":["3"]},{"start":{"row":7,"column":29},"end":{"row":7,"column":30},"action":"insert","lines":["4"]}],[{"start":{"row":18,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":19,"column":0},"end":{"row":20,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":20,"column":0},"end":{"row":40,"column":3},"action":"insert","lines":["app.get('/aameetings', function(req, res) {","    ","    // Connect to the AWS RDS Postgres database","    const client = new Pool(db_credentials);","    ","    // SQL query ","    var thisQuery = `SELECT mtgaddress, mtglocation as location, json_agg(json_build_object('day', mtgday, 'time', mtgtime)) as meetings","                 FROM aadata ","                 WHERE mtgday = 'Tuesday' and mtghour >= 19 ","                 GROUP BY mtgaddress, mtglocation","                 ;`;","","    client.query(thisQuery, (qerr, qres) => {","        if (qerr) { throw qerr }","        else {","            res.send(qres.rows);","            client.end();","            console.log('2) responded to request for aa meeting data');","        }","    });","});"],"id":5}],[{"start":{"row":18,"column":0},"end":{"row":19,"column":0},"action":"remove","lines":["",""],"id":6}],[{"start":{"row":39,"column":3},"end":{"row":40,"column":0},"action":"insert","lines":["",""],"id":7},{"start":{"row":40,"column":0},"end":{"row":41,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":41,"column":0},"end":{"row":47,"column":3},"action":"insert","lines":["// serve static files in /public","app.use(express.static('public'));","","// listen on port 8080","app.listen(8080, function() {","    console.log('Server listening...');","});"],"id":8}]]},"ace":{"folds":[],"scrolltop":594.5,"scrollleft":0,"selection":{"start":{"row":47,"column":3},"end":{"row":47,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":36,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1543282087034}